
package RPSLS;

import javax.swing.JOptionPane;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Scanner;

/**
 *
 * @author Eline
 */
public class RockPaperScissorsLizardSpock extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public RockPaperScissorsLizardSpock() {
        initComponents();
    }
    
    // initialize variables for the game options and the hashmap for game logic.

    private static final String ROCK = "rock"; 
    private static final String PAPER = "paper";
    private static final String SCISSORS = "scissors";
    private static final String LIZARD = "lizard";
    private static final String SPOCK = "spock";
    private static final HashMap<String, String[]> WIN = new HashMap<String, String[]>();
    
    // set variabled for game statistics 
    private static int wins;
    private static int ties;
    private static int losses;
    private static int plays;
    private float stats;
    
    
    // randomly calculate the computer choice
    public static String getComputerChoice() {
        int num = (int) Math.floor(Math.random() * 5);
        switch (num) {
            case 0:
                return ROCK;
            case 1:
                return PAPER;
            case 2:
                return SCISSORS;
            case 3:
                return LIZARD;
            case 4:
                return SPOCK;
            default:
                return "error";
        }
    }
    
    // determine the winner using computer choice and user choice (with easter egg)
    public static String determineWinner(String userChoice, String computerChoice) {
       plays++;
        if (userChoice.equals("bom")) {
            wins++;
            return "You annihilated the computer!";
        } else if (!WIN.containsKey(userChoice)) {
            return "Error";
        } else if (userChoice.equals(computerChoice)){
            ties++; 
            return "It\'s a tie!";
        } else if (Arrays.asList(WIN.get(userChoice)).contains(computerChoice)) {
            wins++;
            return "You won!";
        } else {
            losses++;
            return "Computer won!";
        } 
        
        
    }
    
    //game behavior
    public void playGame(String userChoice) {
        String computerChoice = getComputerChoice();
        String winner = determineWinner(userChoice, computerChoice);
        stats = ((float)wins / plays) * 100;
        String statsinfo = String.format("Wins: %d (%f %%). Ties: %d. Losses: %d. Plays: %d.", wins, stats, ties, losses, plays); //"Wins: " + wins + " (" + stats + "%)" + ". Ties: " + ties + ". Losses: " + losses + ". Plays: " + plays;
        
        computerChoiceLabel.setText("Computer chose: " + computerChoice);
        resultLabel.setText(winner);
        statisticsLabel.setText(statsinfo);
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        buttonRock = new javax.swing.JButton();
        buttonPaper = new javax.swing.JButton();
        buttonScissors = new javax.swing.JButton();
        buttonLizard = new javax.swing.JButton();
        buttonSpock = new javax.swing.JButton();
        computerChoiceLabel = new javax.swing.JLabel();
        resultLabel = new javax.swing.JLabel();
        statisticsLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Rock-Paper-Scissors-Lizard-Spock");
        setResizable(false);

        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Rock-Paper-Scissors-Lizard-Spock");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("What's your choice?");

        buttonRock.setIcon(new javax.swing.ImageIcon(getClass().getResource("/RPSLS/rock.png"))); // NOI18N
        buttonRock.setText("Rock");
        buttonRock.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        buttonRock.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonRock.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonRock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRockActionPerformed(evt);
            }
        });

        buttonPaper.setIcon(new javax.swing.ImageIcon(getClass().getResource("/RPSLS/paper.png"))); // NOI18N
        buttonPaper.setText("Paper");
        buttonPaper.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonPaper.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonPaper.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPaperActionPerformed(evt);
            }
        });

        buttonScissors.setIcon(new javax.swing.ImageIcon(getClass().getResource("/RPSLS/scissors.png"))); // NOI18N
        buttonScissors.setText("Scissors");
        buttonScissors.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonScissors.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonScissors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonScissorsActionPerformed(evt);
            }
        });

        buttonLizard.setIcon(new javax.swing.ImageIcon(getClass().getResource("/RPSLS/lizard.png"))); // NOI18N
        buttonLizard.setText("Lizard");
        buttonLizard.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonLizard.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonLizard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLizardActionPerformed(evt);
            }
        });

        buttonSpock.setIcon(new javax.swing.ImageIcon(getClass().getResource("/RPSLS/spock.png"))); // NOI18N
        buttonSpock.setText("Spock");
        buttonSpock.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonSpock.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonSpock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSpockActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(buttonRock, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonPaper, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonScissors, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonLizard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonSpock, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(70, 70, 70))
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(computerChoiceLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(resultLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(statisticsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {buttonLizard, buttonPaper, buttonRock, buttonScissors, buttonSpock});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonRock)
                    .addComponent(buttonPaper)
                    .addComponent(buttonScissors)
                    .addComponent(buttonLizard)
                    .addComponent(buttonSpock))
                .addGap(18, 18, 18)
                .addComponent(computerChoiceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resultLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(statisticsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {buttonLizard, buttonPaper, buttonRock, buttonScissors, buttonSpock});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonRockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRockActionPerformed
        playGame(ROCK);
    }//GEN-LAST:event_buttonRockActionPerformed

    private void buttonPaperActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPaperActionPerformed
        playGame(PAPER);
    }//GEN-LAST:event_buttonPaperActionPerformed

    private void buttonScissorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonScissorsActionPerformed
        playGame(SCISSORS);
    }//GEN-LAST:event_buttonScissorsActionPerformed

    private void buttonLizardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLizardActionPerformed
        playGame(LIZARD);
    }//GEN-LAST:event_buttonLizardActionPerformed

    private void buttonSpockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSpockActionPerformed
        playGame(SPOCK);
    }//GEN-LAST:event_buttonSpockActionPerformed

            
        
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RockPaperScissorsLizardSpock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RockPaperScissorsLizardSpock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RockPaperScissorsLizardSpock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RockPaperScissorsLizardSpock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RockPaperScissorsLizardSpock().setVisible(true);
            }
        });
        // put game logic in hashmap
        WIN.put(ROCK, new String[] {SCISSORS, LIZARD});
        WIN.put(PAPER, new String[] {ROCK, SPOCK});
        WIN.put(SCISSORS, new String[] {PAPER, LIZARD});
        WIN.put(LIZARD, new String[] {SPOCK, PAPER});
        WIN.put(SPOCK, new String[] {SCISSORS, ROCK});
        
        
       
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton buttonLizard;
    private javax.swing.JButton buttonPaper;
    private javax.swing.JButton buttonRock;
    private javax.swing.JButton buttonScissors;
    private javax.swing.JButton buttonSpock;
    private javax.swing.JLabel computerChoiceLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel resultLabel;
    private javax.swing.JLabel statisticsLabel;
    // End of variables declaration//GEN-END:variables
}
